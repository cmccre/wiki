.container
	.row
		.col-md-8

			%h1= @article.title
			%p
			edited by
			= @user.username
			%br
			- if @article.tag_list.any?
				\#TAGS:
				- @article.tag_list.each do |t|
					= link_to t, articles_path(:tag=>t)

			%br
			%br
			%p= markdown(@article.content)

			%br
			.btn-group
				- if user_signed_in?
					- if @article.is_current_article
						= link_to "Edit", edit_article_path(@article), class: "btn btn-default"
					- if current_user.is_admin
						= link_to "Delete", article_path(@article), method: :delete, data: { confirm: "Confirm Permanent Deletion of Article Revision" }, class: "btn btn-default"
						- if @article.request_approval
							= link_to "Approve", approve_path(@article), method: :approve, data: { confirm: "Confirm Permanent Approval of Article Revision" }, class: "btn btn-default"
					- unless current_user.is_admin or @article.approved or @article.request_approval
						= link_to "Report", report_path(@article), method: :report, data: { confirm: "Confirm Request for Admin Approval" }, class: "btn btn-default"

		- if @article.is_current_article
			.col-md-2.pull-right
				%h4 Previous Revisions
				- @prev_revisions.each do |r|
					%br
					= link_to r.created_at.strftime('%b %d, %Y, %l:%M %p'), r
					%br 
				%br= will_paginate @prev_revisions
		- else
			.col-md-2.pull-right
				- @current_article = Article.where('title = ? AND is_current_article = ?', @article.title, true).take
				%h4= link_to "Current Revision", @current_article


